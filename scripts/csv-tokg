#!/usr/bin/env python3
# vim: set ts=8 sts=4 et sw=4 tw=99:
#
# Converts every column with "LBS" in the header to kilograms,
# replacing "LBS" with "Kg".
# The first row must contain column names.
#
# Overwrites the input file if all columns can be converted.
#

import sys

# Round to two decimal places.
def internal_to_kg_string(s):
    try:
        # NOTE: SPF uses "2.2046". Greater accuracy actually makes it worse.
        return "{:.2f}".format(float(s) / 2.20462262)
    except ValueError:
        print("Field not a float: \"%s\"" % s, file=sys.stderr)
        sys.exit(1)

def to_kg(s):
    if s[-1] is '+':
        amount = internal_to_kg_string(s[:-1])
        # Handle an error where the importer thought the weightclass was KG
        # and converted 'SHW' to a number in Kg.
        if amount == '40.82': # for women
            return '90+'
        if amount == '63.50': # for men
            return '140+'

        # Old USAPL classes.
        if amount == '275+':
            return '125+'
        if amount == '198+':
            return '90+'
        return amount + '+'

    return internal_to_kg_string(s)

if len(sys.argv) != 2:
    print(' Usage: %s csvfile' % sys.argv[0], file=sys.stderr)
    sys.exit(1)

(scriptname, csvname) = sys.argv

with open(csvname) as fd:
    csv = [x.strip().split(',') for x in fd.readlines()]

for j in range(0, len(csv[0])):
    if 'LBS' not in csv[0][j]:
        continue

    print(' Converting column "%s"' % csv[0][j])

    csv[0][j] = csv[0][j].replace('LBS', 'Kg')

    for i in range(1, len(csv)):
        # This doesn't really belong here, but just deal with it man ok?
        if 'SHW' in csv[i][j]:
            csv[i][j] = '308+'

        if csv[i][j]:
            csv[i][j] = to_kg(csv[i][j])

lines = [','.join(row) + "\n" for row in csv]

with open(csvname, 'w') as fd:
    fd.writelines(lines)
